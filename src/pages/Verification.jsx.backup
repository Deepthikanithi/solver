import React, { useState } from 'react'

const Verification = ({ darkMode }) => {
  const [currentStep, setCurrentStep] = useState(0) // 0: level selection, 1: welcome, 2: process, 3: complete
  const [verificationLevel, setVerificationLevel] = useState('') // 'light', 'standard', 'full'
  const [verificationData, setVerificationData] = useState({
    email: { verified: false, value: 'user@example.com' },
    phone: { verified: false, value: '+1 (555) 123-4567' },
    id: { uploaded: false, verified: false, fileName: '' },
    face: { completed: false, verified: false }
  })
  const [uploadProgress, setUploadProgress] = useState(0)
  const [isUploading, setIsUploading] = useState(false)
  const [showCamera, setShowCamera] = useState(false)
  const [faceVerificationStep, setFaceVerificationStep] = useState(1) // 1: instructions, 2: camera, 3: processing, 4: complete

  const verificationSteps = [
    { id: 1, title: 'Welcome', status: 'complete' },
    { id: 2, title: 'ID Upload', status: currentStep >= 2 ? 'active' : 'pending' },
    { id: 3, title: 'Face Verification', status: currentStep >= 3 ? 'active' : 'pending' },
    { id: 4, title: 'Complete', status: currentStep >= 4 ? 'active' : 'pending' }
  ]

  return (
    <div className={`min-h-screen relative overflow-hidden transition-all duration-500 ${
      darkMode ? 'bg-gradient-to-br from-[#0a0a1a] via-[#1a1a2e] to-[#16213e]' : 'bg-white'
    }`}>
      {/* Background Elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className={`absolute top-20 left-20 w-96 h-96 rounded-full blur-3xl opacity-20 ${
          darkMode ? 'bg-blue-500' : 'bg-[#00001a]/10'
        }`}></div>
        <div className={`absolute bottom-20 right-20 w-96 h-96 rounded-full blur-3xl opacity-20 ${
          darkMode ? 'bg-purple-500' : 'bg-[#00001a]/5'
        }`}></div>
        <div className={`absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 rounded-full blur-3xl opacity-10 ${
          darkMode ? 'bg-blue-400/20' : 'bg-blue-500/20'
        }`}></div>
      </div>

      <div className="relative p-6 max-w-6xl mx-auto">
        <>
          {/* Step 0: Verification Level Selection */}
          {currentStep === 0 && (
          <div>
            {/* Header */}
            <div className="mb-8">
              <h1 className={`text-3xl font-bold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                Identity Verification
              </h1>
              <p className={`text-lg ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                Choose your verification level to get started
              </p>
            </div>

            {/* Verification Level Selection */}
            <div className={`backdrop-blur-xl border p-8 shadow-2xl transition-all duration-500 ${
              darkMode
                ? 'bg-white/5 border-white/10 rounded-lg'
                : 'bg-white/60 border-gray-200 rounded-2xl'
            }`}>
              <h2 className={`text-2xl font-semibold mb-6 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                Choose Verification Level
              </h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                {/* Light Verification */}
                <div
                  onClick={() => {
                    setVerificationLevel('light')
                    setCurrentStep(1)
                  }}
                  className={`p-6 cursor-pointer transition-all duration-500 backdrop-blur-xl border group hover:scale-105 ${
                    darkMode
                      ? 'bg-white/5 border-white/10 rounded-lg hover:bg-white/10 hover:border-blue-400/50 hover:shadow-2xl hover:shadow-blue-500/20'
                      : 'bg-white/60 border-gray-200 rounded-2xl hover:bg-white/80 hover:border-green-500/50 hover:shadow-lg hover:shadow-green-500/20'
                  }`}
                >
                  <div className="flex items-center mb-4">
                    <div className={`w-4 h-4 rounded-full mr-3 ${
                      darkMode ? 'bg-green-400' : 'bg-green-500'
                    }`}></div>
                    <h3 className={`text-lg font-semibold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Light Verification
                    </h3>
                  </div>
                  <p className={`text-sm mb-4 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    Email and phone verification only
                  </p>
                  <ul className={`text-sm space-y-2 ${darkMode ? 'text-white/60' : 'text-[#00001a]/60'}`}>
                    <li>• Basic account access</li>
                    <li>• Limited transaction amounts</li>
                    <li>• Quick setup process</li>
                  </ul>
                </div>

                {/* Standard Verification */}
                <div
                  onClick={() => {
                    setVerificationLevel('standard')
                    setCurrentStep(1)
                  }}
                  className={`p-6 cursor-pointer transition-all duration-500 backdrop-blur-xl border group hover:scale-105 ${
                    darkMode
                      ? 'bg-white/5 border-white/10 rounded-lg hover:bg-white/10 hover:border-blue-400/50 hover:shadow-2xl hover:shadow-blue-500/20'
                      : 'bg-white/60 border-gray-200 rounded-2xl hover:bg-white/80 hover:border-yellow-500/50 hover:shadow-lg hover:shadow-yellow-500/20'
                  }`}
                >
                  <div className="flex items-center mb-4">
                    <div className={`w-4 h-4 rounded-full mr-3 ${
                      darkMode ? 'bg-orange-400' : 'bg-orange-500'
                    }`}></div>
                    <h3 className={`text-lg font-semibold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Standard Verification
                    </h3>
                  </div>
                  <p className={`text-sm mb-4 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    Upload government-issued ID
                  </p>
                  <ul className={`text-sm space-y-2 ${darkMode ? 'text-white/60' : 'text-[#00001a]/60'}`}>
                    <li>• Higher transaction limits</li>
                    <li>• Access to premium features</li>
                    <li>• Enhanced security</li>
                  </ul>
                </div>

                {/* Full Verification */}
                <div
                  onClick={() => {
                    setVerificationLevel('full')
                    setCurrentStep(1)
                  }}
                  className={`p-6 cursor-pointer transition-all duration-500 backdrop-blur-xl border group hover:scale-105 ${
                    darkMode
                      ? 'bg-white/5 border-white/10 rounded-lg hover:bg-white/10 hover:border-blue-400/50 hover:shadow-2xl hover:shadow-blue-500/20'
                      : 'bg-white/60 border-gray-200 rounded-2xl hover:bg-white/80 hover:border-blue-500/50 hover:shadow-lg hover:shadow-blue-500/20'
                  }`}
                >
                  <div className="flex items-center mb-4">
                    <div className={`w-4 h-4 rounded-full mr-3 ${
                      darkMode ? 'bg-blue-400' : 'bg-blue-500'
                    }`}></div>
                    <h3 className={`text-lg font-semibold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Full Verification
                    </h3>
                  </div>
                  <p className={`text-sm mb-4 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    ID plus dynamic facial authentication
                  </p>
                  <ul className={`text-sm space-y-2 ${darkMode ? 'text-white/60' : 'text-[#00001a]/60'}`}>
                    <li>• Unlimited transactions</li>
                    <li>• All platform features</li>
                    <li>• Maximum security level</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Step 1: Welcome & Requirements for Selected Level */}
        {currentStep === 1 && (
          <div className={`backdrop-blur-xl border p-8 shadow-2xl transition-all duration-500 ${
            darkMode
              ? 'bg-white/5 border-white/10 rounded-lg'
              : 'bg-white/60 border-gray-200 rounded-2xl'
          }`}>
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center">
                <div className={`w-12 h-12 rounded-full flex items-center justify-center mr-4 backdrop-blur-sm ${
                  darkMode ? 'bg-white/10 border border-white/20' : 'bg-blue-100'
                }`}>
                  <svg className={`w-6 h-6 ${darkMode ? 'text-white' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <div>
                  <h2 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                    {verificationLevel === 'light' && 'Light Verification'}
                    {verificationLevel === 'standard' && 'Standard Verification'}
                    {verificationLevel === 'full' && 'Full Verification'}
                  </h2>
                  <p className={`${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    To ensure the security and integrity of our platform, we require all problem solvers to verify their identity.
                  </p>
                </div>
              </div>
            </div>

            <div className={`p-6 border mb-6 backdrop-blur-sm transition-all duration-500 ${
              darkMode
                ? 'bg-white/5 border-white/10 rounded-lg'
                : 'bg-blue-50/60 border-blue-200 rounded-2xl'
            }`}>
              <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                You'll need:
              </h3>
              <div className="space-y-3">
                {verificationLevel === 'light' && (
                  <>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-green-400' : 'text-green-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Valid email address
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-green-400' : 'text-green-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Phone number for SMS verification
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Good lighting conditions
                      </span>
                    </div>
                  </>
                )}
                {verificationLevel === 'standard' && (
                  <>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Valid email address
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Phone number for SMS verification
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        A valid government-issued ID document (passport, driver's license, etc.)
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Good lighting conditions
                      </span>
                    </div>
                  </>
                )}
                {verificationLevel === 'full' && (
                  <>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Valid email address
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Phone number for SMS verification
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        A valid government-issued ID document (passport, driver's license, etc.)
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Access to a camera for face verification
                      </span>
                    </div>
                    <div className="flex items-center">
                      <svg className={`w-5 h-5 mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                      </svg>
                      <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                        Good lighting conditions
                      </span>
                    </div>
                  </>
                )}
              </div>
            </div>

              <div className={`p-4 border mb-6 backdrop-blur-sm transition-all duration-500 ${
                darkMode
                  ? 'bg-yellow-500/10 border-yellow-500/20 rounded-lg'
                  : 'bg-yellow-50 border-yellow-200 rounded-2xl'
              }`}>
                <p className={`text-sm ${darkMode ? 'text-yellow-300' : 'text-yellow-800'}`}>
                  <strong>Note:</strong> This process usually takes 1-2 business days. We take privacy seriously and use bank-level security to protect your information.
                </p>
              </div>

            <div className="flex justify-between">
              <button
                onClick={() => setCurrentStep(0)}
                className={`px-6 py-3 font-medium transition-all duration-500 backdrop-blur-xl border ${
                  darkMode
                    ? 'bg-white/10 text-white hover:bg-white/20 border-white/20 rounded-lg hover:shadow-lg hover:shadow-white/10'
                    : 'bg-white/60 text-[#00001a] hover:bg-white/80 border-gray-200 rounded-2xl hover:shadow-lg'
                }`}
              >
                ← Back to Selection
              </button>
              <button
                onClick={() => {
                  if (verificationLevel === 'light') {
                    setCurrentStep(2) // Go to light verification process
                  } else {
                    setCurrentStep(2) // Go to ID upload for standard/full
                  }
                }}
                className={`px-8 py-3 font-semibold transition-all duration-500 backdrop-blur-xl border ${
                  darkMode
                    ? 'bg-white text-[#00001a] hover:bg-white/90 border-white/20 rounded-lg shadow-2xl hover:shadow-white/20'
                    : 'bg-blue-500 text-white hover:bg-blue-600 border-blue-500 rounded-2xl shadow-lg hover:shadow-blue-500/30'
                }`}
                style={darkMode ? {
                  boxShadow: '0 4px 20px rgba(255, 255, 255, 0.1)'
                } : {
                  boxShadow: '0 4px 20px rgba(59, 130, 246, 0.3)'
                }}
              >
                Continue →
              </button>
            </div>
          </div>
        )}

          {/* Step 2: Light Verification Process OR ID Upload */}
          {currentStep === 2 && (
            <div className={`backdrop-blur-xl border p-8 shadow-2xl transition-all duration-500 ${
              darkMode
                ? 'bg-white/5 border-white/10 rounded-lg'
                : 'bg-white/60 border-gray-200 rounded-2xl'
            }`}>
              {verificationLevel === 'light' ? (
                // Light Verification Process
                <div>
                  {/* Header Section */}
                  <div className={`group p-6 backdrop-blur-xl border transition-all duration-500 shadow-xl relative overflow-hidden mb-6 ${
                    darkMode
                      ? 'rounded-lg bg-white/3 border-white/20 hover:bg-white/8 hover:border-white/30'
                      : 'rounded-2xl bg-white border-gray-200'
                  }`}
                  style={darkMode ? {
                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1)',
                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)'
                  } : {
                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
                    transition: 'all 0.3s ease'
                  }}>
                    {/* Glassmorphism glow effect */}
                    <div className={`absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${
                      darkMode ? 'bg-gradient-to-r from-white/5 via-white/2 to-transparent' : 'bg-gradient-to-r from-blue-500/5 via-blue-500/2 to-transparent'
                    }`}></div>

                    <div className="relative z-10 flex items-center">
                      <div className={`w-12 h-12 rounded-xl flex items-center justify-center mr-4 backdrop-blur-sm border ${
                        darkMode ? 'bg-white/10 border-white/20 text-white' : 'bg-[#00001a]/10 border-[#00001a]/20 text-[#00001a]'
                      }`}>
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                        </svg>
                      </div>
                      <div>
                        <h2 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                          Email & Phone Verification
                        </h2>
                        <p className={`${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                          Verify your email and phone number to complete light verification
                        </p>
                      </div>
                    </div>
                  </div>

                  {/* Email Verification */}
                  <div className={`group p-6 backdrop-blur-xl border transition-all duration-500 shadow-xl relative overflow-hidden mb-6 ${
                    darkMode
                      ? 'rounded-lg bg-white/3 border-white/20 hover:bg-white/8 hover:border-white/30'
                      : 'rounded-2xl bg-white border-gray-200'
                  }`}
                  style={darkMode ? {
                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1)',
                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)'
                  } : {
                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
                    transition: 'all 0.3s ease'
                  }}>
                    {/* Glassmorphism glow effect */}
                    <div className={`absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${
                      darkMode ? 'bg-gradient-to-r from-white/5 via-white/2 to-transparent' : 'bg-gradient-to-r from-blue-500/5 via-blue-500/2 to-transparent'
                    }`}></div>

                    <div className="relative z-10">
                      <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                        Email Verification
                      </h3>

                      {/* Email Input */}
                      <div className="mb-4">
                        <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                          Email Address
                        </label>
                        <input
                          type="email"
                          value={verificationData.email.value}
                          onChange={(e) => setVerificationData(prev => ({
                            ...prev,
                            email: { ...prev.email, value: e.target.value }
                          }))}
                          className={`w-full px-4 py-3 rounded-lg backdrop-blur-sm border transition-all duration-300 ${
                            darkMode
                              ? 'bg-white/5 border-white/20 text-white placeholder-white/50 focus:bg-white/10 focus:border-white/40'
                              : 'bg-white/50 border-[#00001a]/20 text-[#00001a] placeholder-[#00001a]/50 focus:bg-white/70 focus:border-[#00001a]/40'
                          } focus:outline-none focus:ring-2 focus:ring-blue-500/20`}
                          placeholder="Enter your email address"
                        />
                      </div>

                      <div className="flex items-center justify-between mb-4">
                        <span className={`px-3 py-1 rounded-full text-sm backdrop-blur-sm border ${
                          verificationData.email.verified
                            ? darkMode ? 'bg-green-500/20 text-green-300 border-green-500/30' : 'bg-green-100 text-green-700 border-green-200'
                            : darkMode ? 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30' : 'bg-yellow-100 text-yellow-700 border-yellow-200'
                        }`}>
                          {verificationData.email.verified ? '✓ Verified' : 'Pending'}
                        </span>
                      </div>

                      {!verificationData.email.verified && (
                        <button
                          onClick={() => setVerificationData(prev => ({
                            ...prev,
                            email: { ...prev.email, verified: true }
                          }))}
                          className={`relative overflow-hidden px-6 py-3 rounded-lg font-medium transition-all duration-300 backdrop-blur-2xl border shadow-xl hover:-translate-y-1 hover:shadow-2xl active:translate-y-0 active:shadow-lg group ${
                            darkMode
                              ? 'bg-white/20 text-white border-white/30 hover:bg-white/30 shadow-black/20 hover:shadow-black/30'
                              : 'bg-[#00001a]/20 text-[#00001a] border-[#00001a]/30 hover:bg-[#00001a]/30 shadow-[#00001a]/20 hover:shadow-[#00001a]/30'
                          }`}
                        >
                          {/* Glass radiance effect */}
                          <div className={`absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${
                            darkMode ? 'bg-gradient-to-r from-white/10 via-white/5 to-transparent' : 'bg-gradient-to-r from-[#00001a]/10 via-[#00001a]/5 to-transparent'
                          }`}></div>
                          <span className="relative z-10">Send Verification Email</span>
                        </button>
                      )}
                    </div>
                  </div>

                  {/* Phone Verification */}
                  <div className={`group p-6 backdrop-blur-xl border transition-all duration-500 shadow-xl relative overflow-hidden mb-6 ${
                    darkMode
                      ? 'rounded-lg bg-white/3 border-white/20 hover:bg-white/8 hover:border-white/30'
                      : 'rounded-2xl bg-white border-gray-200'
                  }`}
                  style={darkMode ? {
                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1)',
                    transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)'
                  } : {
                    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
                    transition: 'all 0.3s ease'
                  }}>
                    {/* Glassmorphism glow effect */}
                    <div className={`absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${
                      darkMode ? 'bg-gradient-to-r from-white/5 via-white/2 to-transparent' : 'bg-gradient-to-r from-blue-500/5 via-blue-500/2 to-transparent'
                    }`}></div>

                    <div className="relative z-10">
                      <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                        Phone Verification
                      </h3>

                      {/* Phone Input */}
                      <div className="mb-4">
                        <label className={`block text-sm font-medium mb-2 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                          Phone Number
                        </label>
                        <input
                          type="tel"
                          value={verificationData.phone.value}
                          onChange={(e) => setVerificationData(prev => ({
                            ...prev,
                            phone: { ...prev.phone, value: e.target.value }
                          }))}
                          className={`w-full px-4 py-3 rounded-lg backdrop-blur-sm border transition-all duration-300 ${
                            darkMode
                              ? 'bg-white/5 border-white/20 text-white placeholder-white/50 focus:bg-white/10 focus:border-white/40'
                              : 'bg-white/50 border-[#00001a]/20 text-[#00001a] placeholder-[#00001a]/50 focus:bg-white/70 focus:border-[#00001a]/40'
                          } focus:outline-none focus:ring-2 focus:ring-blue-500/20`}
                          placeholder="Enter your phone number"
                        />
                      </div>

                      <div className="flex items-center justify-between mb-4">
                        <span className={`px-3 py-1 rounded-full text-sm backdrop-blur-sm border ${
                          verificationData.phone.verified
                            ? darkMode ? 'bg-green-500/20 text-green-300 border-green-500/30' : 'bg-green-100 text-green-700 border-green-200'
                            : darkMode ? 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30' : 'bg-yellow-100 text-yellow-700 border-yellow-200'
                        }`}>
                          {verificationData.phone.verified ? '✓ Verified' : 'Pending'}
                        </span>
                      </div>

                      {!verificationData.phone.verified && (
                        <button
                          onClick={() => setVerificationData(prev => ({
                            ...prev,
                            phone: { ...prev.phone, verified: true }
                          }))}
                          className={`relative overflow-hidden px-6 py-3 rounded-lg font-medium transition-all duration-300 backdrop-blur-2xl border shadow-xl hover:-translate-y-1 hover:shadow-2xl active:translate-y-0 active:shadow-lg group ${
                            darkMode
                              ? 'bg-white/20 text-white border-white/30 hover:bg-white/30 shadow-black/20 hover:shadow-black/30'
                              : 'bg-[#00001a]/20 text-[#00001a] border-[#00001a]/30 hover:bg-[#00001a]/30 shadow-[#00001a]/20 hover:shadow-[#00001a]/30'
                          }`}
                        >
                          {/* Glass radiance effect */}
                          <div className={`absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${
                            darkMode ? 'bg-gradient-to-r from-white/10 via-white/5 to-transparent' : 'bg-gradient-to-r from-[#00001a]/10 via-[#00001a]/5 to-transparent'
                          }`}></div>
                          <span className="relative z-10">Send SMS Code</span>
                        </button>
                      )}
                    </div>
                  </div>

                  {/* Note */}
                  <div className={`p-4 border mb-6 backdrop-blur-sm transition-all duration-500 ${
                    darkMode
                      ? 'bg-yellow-500/10 border-yellow-500/20 rounded-lg'
                      : 'bg-yellow-50 border-yellow-200 rounded-2xl'
                  }`}>
                    <p className={`text-sm ${darkMode ? 'text-yellow-200' : 'text-yellow-800'}`}>
                      <strong>Note:</strong> This process usually takes 1-2 business days. We take privacy seriously and use bank-level security to protect your information.
                    </p>
                  </div>

                  {/* Navigation */}
                  <div className="flex justify-between">
                    <button
                      onClick={() => setCurrentStep(1)}
                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                        darkMode
                          ? 'bg-white/10 text-white hover:bg-white/20 border border-white/20'
                          : 'bg-gray-200 text-[#00001a] hover:bg-gray-300'
                      }`}
                    >
                      ← Back
                    </button>
                    <button
                      onClick={() => setCurrentStep(4)}
                      disabled={!verificationData.email.verified || !verificationData.phone.verified}
                      className={`px-8 py-3 rounded-lg font-semibold transition-all duration-300 ${
                        (verificationData.email.verified && verificationData.phone.verified)
                          ? darkMode
                            ? 'bg-white text-[#00001a] hover:bg-white/90 shadow-lg hover:shadow-white/20'
                            : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                          : darkMode
                            ? 'bg-white/20 text-white/50 cursor-not-allowed'
                            : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                      }`}
                    >
                      Complete Verification →
                    </button>
                  </div>
                </div>
              ) : (
                // ID Upload for Standard/Full Verification
                <div>
                  <div className="flex items-center mb-6">
                    <div className={`w-12 h-12 rounded-full flex items-center justify-center mr-4 ${
                      darkMode ? 'bg-white/20' : 'bg-blue-100'
                    }`}>
                      <span className={`text-xl ${darkMode ? 'text-white' : 'text-blue-600'}`}>🆔</span>
                    </div>
                    <div>
                      <h2 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                        Upload ID Document
                      </h2>
                      <p className={`${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                        Please upload a clear photo of your government-issued ID
                      </p>
                    </div>
                  </div>

                  {/* Upload Area */}
                  <div className={`border-2 border-dashed rounded-xl p-8 mb-6 text-center transition-all duration-300 ${
                    darkMode
                      ? 'border-white/30 bg-white/5 hover:bg-white/10'
                      : 'border-blue-300 bg-blue-50 hover:bg-blue-100'
                  }`}>
                {!verificationData.id.uploaded ? (
                  <div>
                    <div className={`w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center ${
                      darkMode ? 'bg-white/20' : 'bg-blue-200'
                    }`}>
                      <span className={`text-2xl ${darkMode ? 'text-white' : 'text-blue-600'}`}>📄</span>
                    </div>
                    <h3 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Upload your ID document
                    </h3>
                    <p className={`text-sm mb-4 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                      Drag and drop your file here, or click to browse
                    </p>
                    <button
                      onClick={() => {
                        // Simulate file upload
                        setIsUploading(true)
                        setUploadProgress(0)
                        const interval = setInterval(() => {
                          setUploadProgress(prev => {
                            if (prev >= 100) {
                              clearInterval(interval)
                              setIsUploading(false)
                              setVerificationData(prev => ({
                                ...prev,
                                id: { uploaded: true, verified: false, fileName: 'government_id.jpg' }
                              }))
                              return 100
                            }
                            return prev + 10
                          })
                        }, 200)
                      }}
                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                        darkMode
                          ? 'bg-white/20 text-white hover:bg-white/30 border border-white/30'
                          : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                      }`}
                    >
                      Choose File
                    </button>
                    <p className={`text-xs mt-2 ${darkMode ? 'text-white/50' : 'text-[#00001a]/50'}`}>
                      Supported formats: JPG, PNG, PDF (Max 10MB)
                    </p>
                  </div>
                ) : (
                  <div>
                    <div className={`w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center ${
                      darkMode ? 'bg-green-500/20' : 'bg-green-100'
                    }`}>
                      <span className={`text-2xl ${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓</span>
                    </div>
                    <h3 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Document uploaded successfully
                    </h3>
                    <p className={`text-sm ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                      {verificationData.id.fileName}
                    </p>
                  </div>
                )}

                {isUploading && (
                  <div className="mt-4">
                    <div className={`w-full bg-gray-200 rounded-full h-2 ${darkMode ? 'bg-white/20' : 'bg-gray-200'}`}>
                      <div
                        className={`h-2 rounded-full transition-all duration-300 ${
                          darkMode ? 'bg-white' : 'bg-blue-500'
                        }`}
                        style={{ width: `${uploadProgress}%` }}
                      ></div>
                    </div>
                    <p className={`text-sm mt-2 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                      Uploading... {uploadProgress}%
                    </p>
                  </div>
                )}
              </div>

              {/* ID Requirements */}
              <div className={`p-4 rounded-lg border mb-6 ${
                darkMode ? 'bg-blue-500/10 border-blue-500/20' : 'bg-blue-50 border-blue-200'
              }`}>
                <h4 className={`font-semibold mb-2 ${darkMode ? 'text-blue-300' : 'text-blue-800'}`}>
                  ID Requirements:
                </h4>
                <ul className={`text-sm space-y-1 ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>
                  <li>• Document must be government-issued (passport, driver's license, national ID)</li>
                  <li>• All text must be clearly visible and readable</li>
                  <li>• Document must be valid and not expired</li>
                  <li>• Photo should be well-lit with no glare or shadows</li>
                </ul>
              </div>

                  <div className="flex justify-between">
                    <button
                      onClick={() => setCurrentStep(1)}
                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                        darkMode
                          ? 'bg-white/10 text-white hover:bg-white/20 border border-white/20'
                          : 'bg-gray-200 text-[#00001a] hover:bg-gray-300'
                      }`}
                    >
                      ← Back
                    </button>
                    <button
                      onClick={() => verificationLevel === 'full' ? setCurrentStep(3) : setCurrentStep(4)}
                      disabled={!verificationData.id.uploaded}
                      className={`px-8 py-3 rounded-lg font-semibold transition-all duration-300 ${
                        verificationData.id.uploaded
                          ? darkMode
                            ? 'bg-white text-[#00001a] hover:bg-white/90 shadow-lg hover:shadow-white/20'
                            : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                          : darkMode
                            ? 'bg-white/20 text-white/50 cursor-not-allowed'
                            : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                      }`}
                    >
                      {verificationLevel === 'full' ? 'Continue to Face Verification →' : 'Complete Verification →'}
                    </button>
                  </div>
                </div>
              )}
            </div>
          )}

          {/* Step 3: Face Verification */}
          {currentStep === 3 && (
            <div>
              <div className="flex items-center mb-6">
                <div className={`w-12 h-12 rounded-full flex items-center justify-center mr-4 ${
                  darkMode ? 'bg-white/20' : 'bg-blue-100'
                }`}>
                  <span className={`text-xl ${darkMode ? 'text-white' : 'text-blue-600'}`}>📷</span>
                </div>
                <div>
                  <h2 className={`text-2xl font-bold ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                    Face Verification
                  </h2>
                  <p className={`${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    Complete the facial authentication process
                  </p>
                </div>
              </div>

              {faceVerificationStep === 1 && (
                <div>
                  <div className={`p-6 rounded-xl border mb-6 ${
                    darkMode ? 'bg-white/5 border-white/10' : 'bg-blue-50 border-blue-200'
                  }`}>
                    <h3 className={`text-lg font-semibold mb-4 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Before we start:
                    </h3>
                    <div className="space-y-3">
                      <div className="flex items-center">
                        <span className={`mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>💡</span>
                        <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                          Make sure you're in a well-lit area
                        </span>
                      </div>
                      <div className="flex items-center">
                        <span className={`mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>👤</span>
                        <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                          Remove glasses, hats, or anything covering your face
                        </span>
                      </div>
                      <div className="flex items-center">
                        <span className={`mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>📱</span>
                        <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                          Hold your device at eye level
                        </span>
                      </div>
                      <div className="flex items-center">
                        <span className={`mr-3 ${darkMode ? 'text-blue-400' : 'text-blue-600'}`}>🔒</span>
                        <span className={`${darkMode ? 'text-white/80' : 'text-[#00001a]/80'}`}>
                          Your biometric data is encrypted and secure
                        </span>
                      </div>
                    </div>
                  </div>

                  <div className="flex justify-between">
                    <button
                      onClick={() => setCurrentStep(2)}
                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                        darkMode
                          ? 'bg-white/10 text-white hover:bg-white/20 border border-white/20'
                          : 'bg-gray-200 text-[#00001a] hover:bg-gray-300'
                      }`}
                    >
                      ← Back to ID Upload
                    </button>
                    <button
                      onClick={() => {
                        setShowCamera(true)
                        setFaceVerificationStep(2)
                      }}
                      className={`px-8 py-3 rounded-lg font-semibold transition-all duration-300 ${
                        darkMode
                          ? 'bg-white text-[#00001a] hover:bg-white/90 shadow-lg hover:shadow-white/20'
                          : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                      }`}
                    >
                      Start Face Verification →
                    </button>
                  </div>
                </div>
              )}

              {faceVerificationStep === 2 && (
                <div>
                  <div className={`p-8 rounded-xl border mb-6 text-center ${
                    darkMode ? 'bg-white/5 border-white/10' : 'bg-gray-50 border-gray-200'
                  }`}>
                    <div className={`w-64 h-64 mx-auto mb-4 rounded-full border-4 border-dashed flex items-center justify-center ${
                      darkMode ? 'border-white/30 bg-white/5' : 'border-blue-300 bg-blue-50'
                    }`}>
                      <div className={`w-48 h-48 rounded-full flex items-center justify-center ${
                        darkMode ? 'bg-white/10' : 'bg-blue-100'
                      }`}>
                        <span className={`text-6xl ${darkMode ? 'text-white/50' : 'text-blue-400'}`}>👤</span>
                      </div>
                    </div>
                    <h3 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                      Position your face in the circle
                    </h3>
                    <p className={`text-sm mb-4 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                      Look directly at the camera and follow the instructions
                    </p>
                    <button
                      onClick={() => {
                        setFaceVerificationStep(3)
                        // Simulate processing
                        setTimeout(() => {
                          setVerificationData(prev => ({
                            ...prev,
                            face: { completed: true, verified: true }
                          }))
                          setFaceVerificationStep(4)
                        }, 3000)
                      }}
                      className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                        darkMode
                          ? 'bg-white/20 text-white hover:bg-white/30 border border-white/30'
                          : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                      }`}
                    >
                      Capture Photo
                    </button>
                  </div>
                </div>
              )}

              {faceVerificationStep === 3 && (
                <div className="text-center">
                  <div className={`w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center ${
                    darkMode ? 'bg-white/20' : 'bg-blue-100'
                  }`}>
                    <div className="w-8 h-8 border-4 border-current border-t-transparent rounded-full animate-spin"></div>
                  </div>
                  <h3 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                    Processing your verification...
                  </h3>
                  <p className={`text-sm ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    Please wait while we verify your identity
                  </p>
                </div>
              )}

              {faceVerificationStep === 4 && (
                <div className="text-center">
                  <div className={`w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center ${
                    darkMode ? 'bg-green-500/20' : 'bg-green-100'
                  }`}>
                    <span className={`text-2xl ${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓</span>
                  </div>
                  <h3 className={`text-lg font-semibold mb-2 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                    Face verification completed!
                  </h3>
                  <p className={`text-sm mb-6 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                    Your facial authentication was successful
                  </p>
                  <button
                    onClick={() => setCurrentStep(4)}
                    className={`px-8 py-3 rounded-lg font-semibold transition-all duration-300 ${
                      darkMode
                        ? 'bg-white text-[#00001a] hover:bg-white/90 shadow-lg hover:shadow-white/20'
                        : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                    }`}
                  >
                    Complete Verification →
                  </button>
                </div>
              )}
            </div>
          )}

          {/* Step 4: Completion */}
          {currentStep === 4 && (
            <div className={`backdrop-blur-xl border p-8 text-center shadow-2xl transition-all duration-500 ${
              darkMode
                ? 'bg-white/5 border-white/10 rounded-lg'
                : 'bg-white/60 border-gray-200 rounded-2xl'
            }`}>
              <div className={`w-20 h-20 mx-auto mb-6 rounded-full flex items-center justify-center ${
                darkMode ? 'bg-green-500/20' : 'bg-green-100'
              }`}>
                <span className={`text-3xl ${darkMode ? 'text-green-400' : 'text-green-600'}`}>🎉</span>
              </div>
              <h2 className={`text-2xl font-bold mb-4 ${darkMode ? 'text-white' : 'text-[#00001a]'}`}>
                {verificationLevel === 'light' && 'Light Verification Complete!'}
                {verificationLevel === 'standard' && 'Standard Verification Complete!'}
                {verificationLevel === 'full' && 'Full Verification Complete!'}
              </h2>
              <p className={`text-lg mb-6 ${darkMode ? 'text-white/70' : 'text-[#00001a]/70'}`}>
                {verificationLevel === 'light' && 'Your email and phone have been successfully verified. You now have basic access to platform features.'}
                {verificationLevel === 'standard' && 'Your identity has been successfully verified. You now have enhanced access to platform features.'}
                {verificationLevel === 'full' && 'Your identity has been successfully verified with maximum security. You now have full access to all platform features.'}
              </p>

              <div className={`p-6 rounded-xl border mb-6 ${
                darkMode ? 'bg-green-500/10 border-green-500/20' : 'bg-green-50 border-green-200'
              }`}>
                <h3 className={`font-semibold mb-3 ${darkMode ? 'text-green-300' : 'text-green-800'}`}>
                  Verification Summary:
                </h3>
                <div className="space-y-2">
                  <div className="flex items-center justify-between">
                    <span className={`${darkMode ? 'text-green-200' : 'text-green-700'}`}>Email Verification</span>
                    <span className={`${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓ Verified</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className={`${darkMode ? 'text-green-200' : 'text-green-700'}`}>Phone Verification</span>
                    <span className={`${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓ Verified</span>
                  </div>
                  {(verificationLevel === 'standard' || verificationLevel === 'full') && (
                    <div className="flex items-center justify-between">
                      <span className={`${darkMode ? 'text-green-200' : 'text-green-700'}`}>ID Document</span>
                      <span className={`${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓ Verified</span>
                    </div>
                  )}
                  {verificationLevel === 'full' && (
                    <div className="flex items-center justify-between">
                      <span className={`${darkMode ? 'text-green-200' : 'text-green-700'}`}>Face Verification</span>
                      <span className={`${darkMode ? 'text-green-400' : 'text-green-600'}`}>✓ Verified</span>
                    </div>
                  )}
                </div>
              </div>

              <div className="flex justify-center space-x-4">
                <button
                  onClick={() => {
                    setCurrentStep(0)
                    setVerificationLevel('')
                    setVerificationData({
                      email: { verified: false, value: 'user@example.com' },
                      phone: { verified: false, value: '+1 (555) 123-4567' },
                      id: { uploaded: false, verified: false, fileName: '' },
                      face: { completed: false, verified: false }
                    })
                  }}
                  className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                    darkMode
                      ? 'bg-white/10 text-white hover:bg-white/20 border border-white/20'
                      : 'bg-gray-200 text-[#00001a] hover:bg-gray-300'
                  }`}
                >
                  ← Back to Verification
                </button>
                <button
                  onClick={() => {
                    // Navigate back to dashboard or profile
                    console.log('Verification completed successfully!')
                  }}
                  className={`px-8 py-3 rounded-lg font-semibold transition-all duration-300 ${
                    darkMode
                      ? 'bg-white text-[#00001a] hover:bg-white/90 shadow-lg hover:shadow-white/20'
                      : 'bg-blue-500 text-white hover:bg-blue-600 shadow-lg hover:shadow-blue-500/30'
                  }`}
                >
                  Continue to Dashboard
                </button>
              </div>
            </div>
          )}
        </>
      </div>
    </div>
  )
}

export default Verification
